% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict.R
\name{predict.model_stack}
\alias{predict.model_stack}
\title{Model predictions}
\usage{
\method{predict}{model_stack}(object, new_data, type = NULL, opts = list(), ...)
}
\arguments{
\item{object}{A model stack with fitted members.}

\item{new_data}{A rectangular data object, such as a data frame.}

\item{type}{Format of returned predicted valuesâ€”one of "numeric", "class",
"prob", or "members". When NULL, \code{predict()} will
choose an appropriate value based on the model's mode.}

\item{opts}{A list of optional arguments to the underlying predict
function passed on to \link[parsnip:predict.model_fit]{parsnip::predict.model_fit} for each member.}

\item{...}{Additional arguments. Currently ignored.}
}
\description{
Apply a model stack to create different types of predictions.
}
\section{Example Data}{


See \code{?example_data} to learn more about the \code{lin_reg_res},
\code{reg_res_svm}, and \code{reg_res_sp} objects used in the examples below.
Long story short, they're resample objects outputted from
\code{\link[tune:fit_resamples]{tune::fit_resamples()}} or \code{\link[tune:tune_grid]{tune::tune_grid()}} fitting \code{body_mass_g}
with all other variables in \link[palmerpenguins:penguins]{palmerpenguins::penguins} as predictors!
}

\examples{
\donttest{
# build and fit a regression model stack
reg_st <-
  stacks() \%>\%
  stack_add(reg_res_lr) \%>\%
  stack_add(reg_res_sp) \%>\%
  stack_blend() \%>\%
  stack_fit()

# predict on the penguins data
predict(reg_st, penguins)

# build and fit a classification model stack
class_st <-
  stacks() \%>\%
  stack_add(class_res_nn) \%>\%
  stack_add(class_res_rf) \%>\%
  stack_blend() \%>\%
  stack_fit()

# predict species, first as a class, then as
# class probabilities
predict(class_st, penguins)
predict(class_st, penguins, type = "prob")
}

}
